version: "3.9"  

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    networks:
      - app-network
    volumes:
      - ./client:/app:cached 
      - /app/node_modules     
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=ecommerce_db
      - DB_PORT=5432
      - GRAPHQL_PORT=4000
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    networks:
      - app-network
    volumes:
      - ./app:/app:cached  
      - /app/node_modules    
    command: ["npm", "start"]

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce_db
    ports:
      - "5433:5432"
    volumes:
      - ./database/data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network: